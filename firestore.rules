rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuthenticated() &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isPrincipal() {
      return isAuthenticated() &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'principal';
    }

    function isTeacher() {
      return isAuthenticated() &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher';
    }

    function isFeeManager() {
      return isAuthenticated() &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'feeManager';
    }

    function hasRole(role) {
      return isAuthenticated() &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }

    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAdmin();
      allow update: if isAdmin() || request.auth.uid == userId;
      allow delete: if isAdmin();
    }

    match /students/{studentId} {
      allow read: if isAuthenticated();
      allow create: if isAdmin() || isPrincipal();
      allow update: if isAdmin() || isPrincipal();
      allow delete: if isAdmin();
    }

    match /teachers/{teacherId} {
      allow read: if isAuthenticated();
      allow create: if isAdmin() || isPrincipal();
      allow update: if isAdmin() || isPrincipal();
      allow delete: if isAdmin();
    }

    match /staff/{staffId} {
      allow read: if isAuthenticated();
      allow create: if isAdmin() || isPrincipal();
      allow update: if isAdmin() || isPrincipal();
      allow delete: if isAdmin();
    }

    match /attendance/{attendanceId} {
      allow read: if isAuthenticated();
      allow create: if isAdmin() || isPrincipal() || isTeacher();
      allow update: if isAdmin() || isPrincipal() || isTeacher();
      allow delete: if isAdmin();
    }

    match /fees/{feeId} {
      allow read: if isAuthenticated();
      allow create: if isAdmin() || isPrincipal() || isFeeManager();
      allow update: if isAdmin() || isPrincipal() || isFeeManager();
      allow delete: if isAdmin();
    }

    match /exams/{examId} {
      allow read: if isAuthenticated();
      allow create: if isAdmin() || isPrincipal();
      allow update: if isAdmin() || isPrincipal();
      allow delete: if isAdmin();
    }

    match /marks/{examId}/{document=**} {
      allow read: if isAuthenticated();
      allow create: if isAdmin() || isPrincipal() || isTeacher();
      allow update: if isAdmin() || isPrincipal() || isTeacher();
      allow delete: if isAdmin();
    }

    match /results/{examId}/{document=**} {
      allow read: if isAuthenticated();
      allow create: if isAdmin() || isPrincipal();
      allow update: if isAdmin() || isPrincipal();
      allow delete: if isAdmin();
    }

    match /activityLogs/{logId} {
      allow read: if isAdmin() || isPrincipal();
      allow create: if isAuthenticated();
      allow update: if false;
      allow delete: if false;
    }

    match /notifications/{notificationId} {
      allow read: if isAuthenticated() && resource.data.uid == request.auth.uid;
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && resource.data.uid == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.uid == request.auth.uid;
    }

    match /fileMeta/{fileId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAdmin() || isPrincipal();
    }

    match /scheduledTasks/{taskId} {
      allow read: if isAdmin();
      allow create: if isAdmin();
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }

    match /emailTemplates/{templateId} {
      allow read: if isAuthenticated();
      allow create: if isAdmin();
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }

    match /reports/{reportId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && resource.data.createdBy == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.createdBy == request.auth.uid;
    }

    match /scheduledExports/{exportId} {
      allow read: if isAdmin() || isPrincipal();
      allow create: if isAdmin() || isPrincipal();
      allow update: if isAdmin() || isPrincipal();
      allow delete: if isAdmin() || isPrincipal();
    }

    match /dailyAggregates/{aggregateId} {
      allow read: if isAuthenticated();
      allow create: if isAdmin();
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }

    match /gradeSystems/{gradeSystemId} {
      allow read: if isAuthenticated();
      allow create: if isAdmin() || isPrincipal();
      allow update: if isAdmin() || isPrincipal();
      allow delete: if isAdmin();
    }

    match /settings/{settingId} {
      allow read: if isAuthenticated();
      allow create: if isAdmin();
      allow update: if isAdmin() || isPrincipal();
      allow delete: if isAdmin();
    }

    match /{document=**} {
      allow read, write: if false;
    }
  }
}
